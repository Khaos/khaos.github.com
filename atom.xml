<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Khaos]]></title>
  <link href="http://Khaos.github.com/atom.xml" rel="self"/>
  <link href="http://Khaos.github.com/"/>
  <updated>2012-12-06T13:31:41+08:00</updated>
  <id>http://Khaos.github.com/</id>
  <author>
    <name><![CDATA[Dazhi Jiang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress易筋经，中文分类标签]]></title>
    <link href="http://Khaos.github.com/blog/2012/12/06/using-chinese-category-tags-in-octopress/"/>
    <updated>2012-12-06T01:54:00+08:00</updated>
    <id>http://Khaos.github.com/blog/2012/12/06/using-chinese-category-tags-in-octopress</id>
    <content type="html"><![CDATA[<p class="info"><strong>卷二</strong>，讨论如何在Octopress中使用中文分类标签。</p>

<!-- more -->

<p>基于Octopress的博客系统自带了一个很好用分类标签插件。但遗憾的是它不支持中文，如果你在文章中定义了中文分类，那么点击的时候会链接到404页面。事实上，这个分类功能是通过<code>plugins/category_generator.rb</code>来实现，所以有好事者对其进行了hack，以提供中文分类的支持。例如，</p>

<ol>
  <li>在<a href="http://geron.heroku.com/blog/2012/03/octo-cate-cn-spo/">这篇文章</a>中，作者修改了<code>category_generator.rb</code>文件中<code>write_category_indexes</code>函数，原理就是将<code>category_dir</code>下的目录名做成汉字在 url 中的编码 (RFC1738)，然后和中文分类标签链接起来。测试了一下，这种方式在本地预览的时候没有问题，但是push到GitHub上就无法解析中文地址。</li>
  <li>另外一种方法（参见<a href="http://blog.sprabbit.com/blog/2012/03/23/octopress/">这里</a>），也是修改了<code>category_generator.rb</code>。与上面不同的是，它重新定义了分类标签在文章中的定义格式。例如，用<code>中文分类标签名{英文别名}</code>这样的格式来定义标签。于是在文章显示是中文分类，但实际链接到英文别名上。这种方法虽然定义标签麻烦些，但可定制性强。实际应用中却有问题，修改后的系统可以正常generate&amp;deploy，但是preview那里有问题，无法自动跟踪文章的改变。这实际上很让人抓狂，因为不能实时的预览文档。也许以后的文章里会进行详细的研究。</li>
</ol>

<p>我的解决方案当然也逃脱不了hack <code>category_generator.rb</code>的套路，但是思路上简单多了，就是利用<a href="https://github.com/rsl/stringex">stringex</a>包的<code>to_url</code>函数将中文分类标签的链接名和<code>category_dir</code>下的目录名都转换成相应的拼音。这样无论在本地还是GitHub上都没有问题。事实上，Octopress系统在利用<code>rake new_[post|page]</code>命令创建含有中文名的文章时也采用了这样的技巧，你可以查看Rakefile中相关的部分。</p>

<p>下面是实现步骤，在<code>category_generator.rb</code>文件头处添加</p>

<pre><code>require "stringex"
</code></pre>

<p>然后找到其中定义category目录的部分</p>

<pre><code>self.write_category_index(File.join(dir, category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase), category)
</code></pre>

<p>将其修改为</p>

<pre><code>self.write_category_index(File.join(dir, category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').to_url.downcase), category)
</code></pre>

<p>再找到定义中文分类网页标签的部分</p>

<pre><code>"&lt;a class='category' href='http://Khaos.github.com/#{dir}/#{item.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase}/'&gt;#{item}&lt;/a&gt;"
</code></pre>

<p>改为</p>

<pre><code>"&lt;a class='category' href='http://Khaos.github.com/#{dir}/#{item.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').to_url.downcase}/'&gt;#{item}&lt;/a&gt;"
</code></pre>

<p>注意上面两处修改就是再相应的地方加上<code>to_url</code>函数进行地址的转换。</p>

<p>修改后重新generate和deploy/preview，就可以看到中文分类了，而实际的链接就是对应的拼音。你可以用这个blog来测试中文分类功能。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress易筋经，目录表ToC]]></title>
    <link href="http://Khaos.github.com/blog/2012/12/05/generating-toc-in-octopress/"/>
    <updated>2012-12-05T07:49:00+08:00</updated>
    <id>http://Khaos.github.com/blog/2012/12/05/generating-toc-in-octopress</id>
    <content type="html"><![CDATA[<p class="info" style="width: 378px"><strong>卷一</strong>，介绍在Octopress中添加 Table of Contents (ToC) 的方法。</p>

<p>维护长博客的时候，如果加上一个目录表 (Table of Contents)，会令读者对文章结构有一个清晰的把握。基于Octopress的博客系统，有两种常见的创建目录表的方式：基于 kramdown<sup id="fnref:kramdown"><a href="#fn:kramdown" rel="footnote">1</a></sup> 的实现，以及基于 jQuery 插件的实现。前者基本上不需要配置，仅要求把默认的 Markdown parser 改为 kramdown 即可。后者则需要对系统进行相对较多的修改。</p>

<!-- more -->

<h2 id="kramdowntoc">方式一：利用kramdown内嵌的ToC功能</h2>

<ul id="markdown-toc">
  <li><a href="#kramdowntoc">方式一：利用kramdown内嵌的ToC功能</a>    <ul>
      <li><a href="#section">实现</a></li>
      <li><a href="#demo">Demo</a></li>
    </ul>
  </li>
  <li><a href="#jquerytoc">方式二：利用jQuery的ToC插件</a>    <ul>
      <li><a href="#section-1">实现</a></li>
      <li><a href="#demo-1">Demo</a></li>
    </ul>
  </li>
  <li><a href="#section-2">测试部分</a>    <ul>
      <li><a href="#h3">H3</a></li>
    </ul>
  </li>
</ul>

<p>kramdown 是一款由Ruby实现的Markdown解析器。它扩展的标准Markdown语言，添加了很多语法，其中一个就是内置了ToC的实现。这让在基于Jekyll/Octopress的博客系统中插入ToC变得简单而灵活，但是不幸的是，它的目录结构和层次需要在<code>_config.yml</code>中指定，也就是说，这些设定是全站的，你无法在某一篇Blog中使用不同于全站的ToC结构。</p>

<h3 id="section">实现</h3>

<p>这种方式的配置很简单，仅需要在你的<code>_config.yml</code>文件中，将默认的 Markdown parser 改为 kramdown，也即，</p>

<pre><code>markdown: kramdown
</code></pre>

<p>在kramdown中，默认的目录树层次是从<code>h1</code>到<code>h6</code>，你可以用下的设定将这个层次改为从<code>h1</code>到<code>h3</code>，</p>

<pre><code>kramdown:
    toc_levels: 1..3
</code></pre>

<p>插入ToC也很简单，几乎在你的文章任何地方，加入下面的代码，在相应的部分kramdown就会帮你生成并插入一个ToC，</p>

<pre><code>* Put anything here
{:toc}
</code></pre>

<p>余下的事情就是给你的ToC润色，需要修改的样式是<code>ul#markdown-toc</code>。</p>

<h3 id="demo">Demo</h3>

<p>右侧透明背景的ToC即是利用kramdown实现的。由于我定义了<code>toc_levels: 1..3</code>，所以低于<code>h3</code>的标题并未出现在表中。</p>

<h2 id="jquerytoc">方式二：利用jQuery的ToC插件</h2>

<p>这种方式实现起来稍微复杂一些，好处是可以根据需要调整ToC的层次结构。当然，它也有局限性，例如，就我的实现而言，ToC的位置是固定浮动与整篇正文之上的，也就是说它会出现在文章的最开头处。</p>

<h3 id="section-1">实现</h3>

<p>闲话少叙，下面介绍实现过程。（这里应用的方法主要参照的是Brian Clapper的博客 <sup id="fnref:BrianClapper"><a href="#fn:BrianClapper" rel="footnote">2</a></sup> ）。</p>

<!-- <iframe style="width: 100%; height: 300px" src="http://jsfiddle.net/m6Z3C/embedded/js,resources,html,css,result/light/"></iframe> &#8211;>
<p><!--  --></p>

<ul>
  <li>
    <p>jQuery插件支持</p>

    <p>按照<a href="http://jquery.com/">jQuery</a>网站的提示配置你的系统，并且下载<a href="http://fuelyourcoding.com/scripts/toc/">Table of Contents jQuery Plugin</a>，将相应的JS文件放到<code>source/javascripts</code>目录。</p>

    <p>在<code>source/_includes/custom/after_footer.html</code>中添加</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">// !!! Load jQuery before this
</span><span class="line"><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nx">jQuery</span><span class="p">.</span><span class="nx">noConflict</span><span class="p">();</span>
</span><span class="line"><span class="nt">&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;/javascripts/jquery.scrollTo.min.js&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;/javascripts/jquery.tableofcontents.min.js&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>创建JavaScript文件，例如，<code>tocgenerator.js</code>，使其包含下面的代码，</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="js"><span class="line"><span class="kd">function</span> <span class="nx">generateTOC</span><span class="p">(</span><span class="nx">insertBefore</span><span class="p">,</span> <span class="nx">heading</span><span class="p">,</span> <span class="nx">startLv</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">container</span> <span class="o">=</span> <span class="nx">jQuery</span><span class="p">(</span><span class="s2">&quot;&lt;div id=&#39;tocBlock&#39;&gt;&lt;/div&gt;&quot;</span><span class="p">);</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">div</span> <span class="o">=</span> <span class="nx">jQuery</span><span class="p">(</span><span class="s2">&quot;&lt;ul id=&#39;toc&#39;&gt;&lt;/ul&gt;&quot;</span><span class="p">);</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">content</span> <span class="o">=</span> <span class="nx">jQuery</span><span class="p">(</span><span class="nx">insertBefore</span><span class="p">).</span><span class="nx">first</span><span class="p">();</span>
</span><span class="line">
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">heading</span> <span class="o">!==</span> <span class="kc">undefined</span> <span class="o">&amp;&amp;</span> <span class="nx">heading</span> <span class="o">!==</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="nx">container</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;&lt;span class=&quot;tocHeading&quot;&gt;&#39;</span> <span class="o">+</span> <span class="nx">heading</span> <span class="o">+</span> <span class="s1">&#39;&lt;/span&gt;&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">startLv</span> <span class="o">===</span> <span class="kc">undefined</span><span class="p">)</span> <span class="p">{</span> <span class="nx">startLv</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
</span><span class="line">
</span><span class="line">    <span class="nx">div</span><span class="p">.</span><span class="nx">tableOfContents</span><span class="p">(</span><span class="nx">content</span><span class="p">,</span> <span class="p">{</span> <span class="nx">startLevel</span><span class="o">:</span> <span class="nx">startLv</span> <span class="p">});</span>
</span><span class="line">    <span class="nx">container</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">div</span><span class="p">);</span>
</span><span class="line">    <span class="nx">container</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">insertBefore</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>载入创建的JS文件（<code>source/_includes/custom/after_footer.html</code>）</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;/javascripts/tocgenerator.js&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>创建ToC模块，依然在<code>source/_includes/custom/after_footer.html</code>中，添加，</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% if page.toc == true %}
</span><span class="line">  {% if page.tocstartlv %}
</span><span class="line">    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nx">jQuery</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">      <span class="c1">// Put a TOC right before the entry content.</span>
</span><span class="line">      <span class="nx">generateTOC</span><span class="p">(</span><span class="s1">&#39;.entry-content&#39;</span><span class="p">,</span> <span class="s1">&#39;Contents&#39;</span><span class="p">,</span> <span class="p">{{</span> <span class="nx">page</span><span class="p">.</span><span class="nx">tocstartlv</span> <span class="p">}});</span>
</span><span class="line">    <span class="p">});</span>
</span><span class="line">    <span class="nt">&lt;/script&gt;</span>
</span><span class="line">  {% else %}
</span><span class="line">    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nx">jQuery</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">      <span class="c1">// Put a TOC right before the entry content.</span>
</span><span class="line">      <span class="nx">generateTOC</span><span class="p">(</span><span class="s1">&#39;.entry-content&#39;</span><span class="p">,</span> <span class="s1">&#39;Contents&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="p">});</span>
</span><span class="line">    <span class="nt">&lt;/script&gt;</span>
</span><span class="line">  {% endif %}
</span><span class="line">{% endif %}
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>
    <p>插入ToC</p>

    <p>与<a href="#kramdowntoc">方式一</a>不同，第二种方法插入ToC需要在文章的开始的Liquid标签出用两个新标签<code>toc</code>和<code>tocstartlv</code>来控制是否显示ToC以及ToC starting level。例如，本文采用了如下设定，</p>

    <pre><code>  toc: true
  tocstartlv: 2
</code></pre>
  </li>
</ul>

<h3 id="demo-1">Demo</h3>

<p>生成的ToC出现在文章开始处，为区别于方式一，它采用了浅蓝色的背景。可以看到，由于起始的ToC level是2，它给出从<code>h2</code>到<code>h4</code>的所有目录项。另一方面，由kramdown产生的ToC由于设置的原因，仅能显示<code>h2</code>和<code>h3</code>这两层的目录项。</p>

<h2 id="section-2">测试部分</h2>

<h3 id="h3">H3</h3>

<h4 id="h4">H4</h4>

<h5 id="h5">H5</h5>
<div class="footnotes">
  <ol>
    <li id="fn:kramdown">
      <p><a href="http://kramdown.rubyforge.org/">kramdown主页</a><a href="#fnref:kramdown" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:BrianClapper">
      <p><a href="http://brizzled.clapper.org/blog/2012/02/04/generating-a-table-of-contents-in-octopress/">Brian Clapper, Generating a Table of Contents in Octopress</a><a href="#fnref:BrianClapper" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[搬家]]></title>
    <link href="http://Khaos.github.com/blog/2012/12/05/moving/"/>
    <updated>2012-12-05T00:39:00+08:00</updated>
    <id>http://Khaos.github.com/blog/2012/12/05/moving</id>
    <content type="html"><![CDATA[<p>Blog闲置了许久，好一段不堪回首。重做了新Theme，加了一些plugin（<a href="../../../../../blog/experimental">测试页</a>），准备拾笔再写。先慢慢把Wordpress上的文章搬过来吧（半自动化的过程～）。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Ruby with RVM]]></title>
    <link href="http://Khaos.github.com/blog/2012/02/26/install-ruby-with-rvm/"/>
    <updated>2012-02-26T09:33:00+08:00</updated>
    <id>http://Khaos.github.com/blog/2012/02/26/install-ruby-with-rvm</id>
    <content type="html"><![CDATA[<p>自打从<a href="http://yihui.name/">Yihui Xie</a>那里听说了<a href="http://jekyllrb.com/">Jekyll</a>，并照着<a href="http://jekyllbootstrap.com/">Jekyll Bootstrap</a>折腾了一番，便喜欢上了这个静态网站构建系统。不久从<a href="http://lucifr.com/">Lucifr</a>看到<a href="http://octopress.org/">Octopress</a>这个变身版的Jekyll，于是就更加要齐齐苦苦了。Octopress依赖于Ruby 1.9.2+，所以这里介绍一下如何用<a href="https://rvm.beginrescueend.com/">Ruby Version Manager (RVM)</a>。</p>

<!-- more -->

<h2 id="uninstall-all-ruby-related-macports-ports">Uninstall all ruby-related MacPorts’ ports</h2>

<p>由于我的Ruby是用MacPorts安装的，所以首先需要把这个版本的Ruby卸载掉。</p>

<h3 id="ports">卸载相关Ports</h3>

<pre><code>$ sudo port uninstall rb19-*
$ sudo port clean rb19-*
$ sudo port uninstall ruby19
$ sudo port clean ruby19
$ sudo port uninstall rb-*
$ sudo port clean rb-*
$ sudo port uninstall ruby
$ sudo port clean ruby
</code></pre>

<h3 id="gems">移除Gems</h3>

<pre><code>$ sudo rm -rf /opt/local/lib/ruby
$ sudo rm -rf /opt/local/lib/ruby19
$ sudo rm -rf /opt/local/bin/rdiscount
$ sudo rm -rf /opt/local/bin/jekyll
</code></pre>

<h2 id="install-rvm">Install RVM</h2>

<p>打开Terminal，确定处于当前用户目录下 (~)，运行如下命令</p>

<pre><code>$ bash -s stable &lt; &lt;(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer )
</code></pre>

<p>在所有打开的Terminal中运行</p>

<pre><code>$ source /Users/Khaos/.rvm/scripts/rvm
</code></pre>

<p>可以用如下命令查看是否RVM已经安装配置成功</p>

<pre><code>$ type rvm | head -1
</code></pre>

<p>如果返回<code>rvm is a function</code>，就说明成功了。</p>

<p>查看RMV requirements</p>

<pre><code>$ rvm requriements
</code></pre>

<p>在我的Mac上提示需要libksba，可以通过MacPorts安装</p>

<pre><code>$ sudo port install libksba
</code></pre>

<p>利用RVM安装Ruby (e.g., 1.9.3)</p>

<pre><code>$ rvm install 1.9.3
</code></pre>

<h2 id="use-newly-installed-ruby">Use newly installed Ruby</h2>

<pre><code>$ rvm use 1.9.2
</code></pre>

<p>check ruby version
    $ ruby -v
    $ which ruby</p>

<h2 id="problems">Problems</h2>

<ul>
  <li>
    <p>ArgumentError: invalid byte sequence in US-ASCII</p>

    <p>See <a href="https://github.com/rails/jquery-rails/pull/35">https://github.com/rails/jquery-rails/pull/35</a></p>
  </li>
</ul>

<h2 id="references">References</h2>

<ul>
  <li><a href="https://rvm.beginrescueend.com/">RVM official site</a></li>
  <li><a href="https://rvm.beginrescueend.com/rvm/install/">Installing RVM</a></li>
  <li><a href="http://stackoverflow.com/questions/3464285/ruby-on-mac-osx-via-mac-ports">Ruby on Mac OSX via Mac Ports</a></li>
  <li><a href="http://www.alessandrobaffa.it/2011/04/18/using-macports-to-install-ruby-1-9-x/">Using MacPorts To Install Ruby 1.9.x</a></li>
  <li><a href="http://www.ruby-forum.com/topic/178659#782331">Using MacPorts To Install Ruby 1.9.1 and Rails 2.3.0 RC1</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[乱弹，学步]]></title>
    <link href="http://Khaos.github.com/blog/2012/02/26/starting/"/>
    <updated>2012-02-26T09:25:00+08:00</updated>
    <id>http://Khaos.github.com/blog/2012/02/26/starting</id>
    <content type="html"><![CDATA[<p>万事开头难，一篇杂乱的开场白。</p>

<p>本欲在开场中矫揉造作一番，可提起笔来却不知道写些什么。一通挣扎，不禁释然，还是顺其自然，随意写些东西吧，于是有了这个《<strong>乱弹</strong>》。</p>

<!-- more -->

<h2 id="section">缘起</h2>

<p>这个Blog是关于什么的？嗯～，我不是科学界的一名大师（怪兽？），而是茫茫工程界一枚迷途小书童，一个三脚猫的业余码农，狂热的TeX/LaTeX爱好者，Google的粉丝，New Age音乐的聆听者，于是我想这里就应该是关于这些东西的吧，</p>

<ul>
  <li>TeX/LaTeX</li>
  <li>Matlab</li>
  <li>R</li>
  <li>TikZ/pgf</li>
  <li>Python</li>
  <li>Ruby</li>
  <li>Mac</li>
  <li>其他的一些杂七杂八</li>
</ul>

<h2 id="section-1">初探</h2>

<p>既然对建站一无所知，不如就从此入手吧，前面这几篇就说说如何用Jekyll建站吧。</p>

<h3 id="section-2">纷至沓来的概念</h3>

<ul>
  <li><a href="http://liquidmarkup.org/">Liquid</a></li>
  <li><a href="http://daringfireball.net/projects/markdown/">Markdown</a></li>
  <li><a href="http://jekyllrb.com/">Jekyll</a></li>
  <li><a href="http://octopress.org/">Octopress</a>, an exmple from <a href="http://lucifr.com/">Lucifr</a></li>
  <li><a href="http://www.yaml.org/">YAML</a></li>
  <li><a href="http://sass-lang.com/">Sass - Syntactically Awesome Stylesheets</a></li>
  <li><a href="http://disqus.com/">DISQUS</a></li>
</ul>

<h3 id="section-3">网站</h3>

<ul>
  <li>Jekyll
    <ul>
      <li><a href="http://yihui.name/">谢益辉</a>, source  <a href="https://github.com/yihui/yihui.github.com">@github</a></li>
      <li><a href="http://lhzhang.com/">setlmpl</a></li>
      <li><a href="http://ztpala.com/">Tao</a></li>
      <li><a href="http://www.ksornberger.com/">Kevin Sornberger</a> source <a href="https://github.com/ksornberger/ksornberger.github.com">@github</a></li>
    </ul>
  </li>
  <li>Octopress
    <ul>
      <li><a href="http://lucifr.com/">Lucifr</a></li>
      <li><a href="http://zespia.tw/">Zespia</a></li>
      <li><a href="http://chenyufei.info/">Chen Yufei</a></li>
      <li><a href="http://blog.xdite.net/">Blog.XDite.net</a></li>
      <li><a href="http://alexzeitler.com/">Alex Zeitler</a></li>
      <li><a href="http://zanshin.net/">Zanshin.net</a></li>
    </ul>
  </li>
</ul>

<h3 id="section-4">参考文献</h3>

<ul>
  <li><a href="http://chenyufei.info/blog/2011-12-13/migrate-to-octopress/">博客转用 Octopress</a></li>
  <li><a href="http://zespia.tw/blog/2012/01/14/hello-octopress/">Hello Octopress!</a></li>
  <li><a href="http://www.alessandrobaffa.it/2011/04/18/using-macports-to-install-ruby-1-9-x/">Using MacPorts To Install Ruby 1.9.x</a></li>
  <li><a href="http://www.ruby-forum.com/topic/178659#782331">Using MacPorts To Install Ruby 1.9.1 and Rails 2.3.0 RC1</a></li>
</ul>

<h3 id="section-5">工具</h3>

<ul>
  <li><a href="http://www.sublimetext.com/">Sublime Text 2</a>, replacement of <a href="http://macromates.com/">TextMate</a> (BBEdit? no)</li>
</ul>

<h3 id="section-6">目标</h3>

<ul>
  <li>Blogging with comments</li>
  <li>Blogging with codes</li>
  <li>Blogging with graph</li>
  <li>Blogging with equations</li>
  <li>Blogging with LaTeX</li>
</ul>

<h3 id="section-7">技术</h3>

<ul>
  <li>模版</li>
  <li>插图</li>
  <li>字体</li>
  <li>代码，利用<a href="http://pygments.org/">Pygments</a></li>
  <li>公式</li>
</ul>

<h2 id="step-by-step-tutorial">预告，Step by step tutorial</h2>

<ul>
  <li><del>Jekyll</del></li>
  <li><del>Jekyll Bootstrape</del></li>
  <li><del>Markdown</del></li>
  <li>
    <p><del>Sublime Text 2</del></p>
  </li>
  <li>Octopress</li>
  <li>Theme</li>
  <li>Markdown</li>
  <li>TextMate 2</li>
</ul>

<h2 id="blog">Blog列表</h2>

<ul class="posts">
  
    <li><span>06 Dec 2012</span> &raquo; <a href="http://Khaos.github.com/blog/2012/12/06/using-chinese-category-tags-in-octopress/">Octopress易筋经，中文分类标签</a></li>
  
    <li><span>05 Dec 2012</span> &raquo; <a href="http://Khaos.github.com/blog/2012/12/05/generating-toc-in-octopress/">Octopress易筋经，目录表ToC</a></li>
  
    <li><span>05 Dec 2012</span> &raquo; <a href="http://Khaos.github.com/blog/2012/12/05/moving/">搬家</a></li>
  
    <li><span>26 Feb 2012</span> &raquo; <a href="http://Khaos.github.com/blog/2012/02/26/install-ruby-with-rvm/">Install Ruby with RVM</a></li>
  
    <li><span>26 Feb 2012</span> &raquo; <a href="http://Khaos.github.com/blog/2012/02/26/starting/">乱弹，学步</a></li>
  
    <li><span>18 Jun 2008</span> &raquo; <a href="http://Khaos.github.com/blog/2008/06/18/trying-lyx/">形而上者谓之道，形而下者谓之器 —— LyX学习小记</a></li>
  
    <li><span>30 Nov 2007</span> &raquo; <a href="http://Khaos.github.com/blog/2007/11/30/xiang-long-shi-ba-zhang/">降龙十八掌</a></li>
  
</ul>

<p><del>其他</del></p>

<!-- Read [Jekyll Quick Start](http://jekyllbootstrap.com/usage/jekyll-quick-start.html) -->

<!-- Complete usage and documentation available at: [Jekyll Bootstrap](http://jekyllbootstrap.com) -->
<!-- 
## Update Author Attributes

In `_config.yml` remember to specify your own data:
    
    title : My Blog =)
    
    author :
      name : Name Lastname
      email : blah@email.test
      github : username
      twitter : username

The theme should reference these variables whenever needed.
    
## Sample Posts

This blog contains sample posts which help stage pages and blog data.
When you don't need the samples anymore just delete the `_posts/core-samples` folder.

    $ rm -rf _posts/core-samples

Here's a sample "posts list".
 -->
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[形而上者谓之道，形而下者谓之器 —— LyX学习小记]]></title>
    <link href="http://Khaos.github.com/blog/2008/06/18/trying-lyx/"/>
    <updated>2008-06-18T00:00:00+08:00</updated>
    <id>http://Khaos.github.com/blog/2008/06/18/trying-lyx</id>
    <content type="html"><![CDATA[<p class="warning">08年的文章（格式还保持WP原样），后面坑有点大，我不打算填了。因为虽然也用LyX，但是写较大的文档我还是习惯用LaTeX（主要是我要用Makefile来控制整个编译过程），也许以后会有LyX的一些介绍。</p>

<!-- more -->

<p><div id="msgcns!E5B806D2C8679F5D!154" class="bvMsg"><p>  </p><p>|&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211; <font color="#ff8000">看什么看，没见过分隔符?</font> &#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;|  </p><h5>小引1</h5> <p>形而上者谓之道，形而下者谓之器。 —— 《易经 · 系辞》  </p><p>|&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211; <font color="#ff8000">看什么看，没见过分隔符?</font> &#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;|  </p><h5>小引2</h5> <table cellspacing="0" cellpadding="2" width="478" border="0"> <tbody> <tr> <td valign="top" width="79">TeX/LaTeX  </td><td valign="top" width="41">&#8212;&gt;  </td><td valign="top" width="356">WYSIWYAF (what you see is what you asked for)  </td></tr><tr> <td valign="top" width="79">LyX  </td><td valign="top" width="42">&#8212;&gt;  </td><td valign="top" width="356">WYSIWYM (what you see is what you mean)  </td></tr><tr> <td valign="top" width="79">Word  </td><td valign="top" width="43">&#8212;&gt;  </td><td valign="top" width="356">WYSIWYG (what you see is what you get)</td></tr></tbody></table> <p>|&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211; <font color="#ff8000">看什么看，没见过分隔符?</font> &#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;|  </p><h5>小引3</h5> <p>接触LyX一周有余，颇有所得，这里小记一下。  </p><p>（此篇归入《易筋经》）  </p><p>|&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211; <font color="#ff8000">看什么看，没见过分隔符?</font> &#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;|  </p><p>说到LyX，不得不先说说TeX/LaTeX和Word。我于97年接触Microsoft Word，2000年用它写了第一篇毕业论文。记得当时只是插入了十几张图和几十个公式，在586的机器上真是把我折磨的欲仙欲死。于是从Word XP开始奋发图强，学习宏命令，学做交叉引用、目录和动画，等等。至2003年前后，各种18般武器都在Word上面试了个遍，自感脱离noob之列，不仅飘飘然起来。可惜好景不长，2004年底，有幸读到了侯捷先生的《Word排版艺术》一书，才知道于Word我只略通皮毛，而于精华只是初窥门径。虽然不免灰心丧气，但也看到Word之笨拙，有时甚至不近人情，不食人间烟火的倔强之处。于是，我决定，摒弃Word，皈依TeX/LaTeX。  </p><p>对于TeX，并非一见钟情。我在2000年就耳闻TeX/LaTeX，但是一直没有兴趣研究，一个是那个时候TeX/LaTeX的中文支持不好，而其时我也从不写英文论文，再一个它的门槛较高，没有目标的学习如同嚼蜡。注定要与TeX/LaTeX结缘，2006年我需要写一篇图、文、式（公式）并茂的英文论文。想起用Word时抓狂的样子，终于下决心这回用TeX/LaTeX来写！于是找来CTeX（一个中文TeX<del>宏包</del>系统，初学者的上选，可以到<a href="http://www.ctex.org">这里</a>下载）安装包，借来参考书，似模似样的写起来。一个月下来，竟然不知不觉“轻舟已过万重山”，一份70来页的文档跃然纸上。麻雀虽小，却也包含了Graph, Table, Equation, Algorithm, Theorem，以及Content, Reference, Cross-reference和Bookmark，等等。至此，不仅于LaTeX相见恨晚，似乎并没有想象中的那么难学。于是两年来，PC上再也没有出现过超过10页的Word文档。几篇文档写下来，手法日臻纯熟，于TeX确越发敬畏起来，实感其之博大精深，回想Word，现在只能称之为“字处理软件”，而非“排版软件”，在TeX面前，似乎有些小巫见大巫。慢慢的，迷恋于TeX不能自拔，用它写Report，写Memorandum，写Presentation，甚至在LaTeX中做pdf动画。  </p><p>（未完&#8230;）</p></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[降龙十八掌]]></title>
    <link href="http://Khaos.github.com/blog/2007/11/30/xiang-long-shi-ba-zhang/"/>
    <updated>2007-11-30T19:01:00+08:00</updated>
    <id>http://Khaos.github.com/blog/2007/11/30/xiang-long-shi-ba-zhang</id>
    <content type="html"><![CDATA[<p class="fn-img"><img src="../../../../../images/blog/2007/kongfucat.jpeg" alt="降龙十八掌" /></p>

<!-- more -->

<ul>
  <li>
    <p>第一式（起手式）见龙在田：</p>

    <p>出自坤卦，辞曰：“见龙在田，大贞”就是说看见龙在田中会有好事发生。这一招掌力霸道异常，为降龙十八掌最强的一招，取名见龙在田，既是说一掌打去，敌人完蛋大吉。 </p>
  </li>
  <li>
    <p>第二式 飞龙在天：</p>

    <p>降龙十八掌中的一招，同样源于周易。辞曰：“飞龙在天，利见大人”，飞龙即翱翔在天空的龙，飞龙在天，看尽世事，所以能发现大人（有道德的人）。这一招由上势下，借惯性伤人，正如飞龙借有德者而扬名，威力奇大。</p>
  </li>
  <li>
    <p>第三式 鸿渐于陆：</p>

    <p>出于渐卦，渐指妇女，辞曰：“鸿渐于陆，其羽可用为仪”大雁降到平地上，他的羽毛可以被妇女用来装饰。此招之用，在一个巧字，藏巧于拙，用羽为仪。 </p>
  </li>
  <li>
    <p>第四式 龙跃在渊：</p>

    <p>降龙十八掌中的一招，同样源于周易“龙跃于渊”</p>
  </li>
  <li>
    <p>第五式 羝羊触蕃：</p>

    <p>出自大壮卦，辞曰：“羝羊触藩，赢其角”两只羊角力，赢的用的是它的角。这招用途是说要用有力点来伤敌。但“羝羊触藩，不能退，不能邃。”运用不当相信会反受其害。 </p>
  </li>
  <li>
    <p>第六式 潜龙勿用：</p>

    <p>源于坤卦，辞曰：“潜龙勿用”，龙潜于渊，其志难测，所以不可用。此招劲收于内凝而不发，但若有敢试其锋芒者，必受其殃。 </p>
  </li>
  <li>
    <p>第七式 利涉大川：</p>

    <p>源于同仁卦，同人既是同志，辞曰：“同人于野，亨，利涉大川，利君子贞”有好朋友聚集起来，畅通无阻，所以去危险的地方也变得安全了。此招表面平平无期，实质上力聚于掌，正如好友的聚集，难凝而易散。如中此招，必定全身筋脉尽碎，死的苦不堪言！ </p>
  </li>
  <li>
    <p>第八式 神龙摆尾：</p>

    <p>本名履虎尾，出入履卦，履既踏，辞曰：“眇能视，跛能履，履护尾，咀人”意思是说人瞎了一只眼睛还能看见东西，瘸了一条腿还能走路，但是如果不小踏上了老虎的尾巴，就会被它吃掉。这招专攻背后之人，劲道奇猛，实为降龙十八掌的救命绝招。 </p>
  </li>
  <li>
    <p>第九式 密云不雨：</p>

    <p>出自乾卦，辞曰：“密云不雨，时或有风”雨云很多了但不下雨，那是由于在等待着刮风。此招不在于密云不雨，密云不雨只是力量的积累，而真正的杀手却在时或有风上，风声（时机）一起，敌人便万劫难逃了。 </p>
  </li>
  <li>
    <p>第十式 突如其来：</p>

    <p>功如其名,去势奇快,攻其不备,最易出奇制胜.在对手未反应之前,便给予敌人致命一击. </p>
  </li>
  <li>
    <p>第十一式 双龙取水：</p>

    <p>攻势一分为二,看似平常一招,功力与身法倍增二倍有余,有点类似于周伯通自创的双手互搏,但与其比较有过之无不及 </p>
  </li>
  <li>
    <p>第十二式 鱼跃于渊：</p>

    <p>平凡的一跃,尤如龙腾九霄,有着强大的爆发力. </p>
  </li>
  <li>
    <p>第十三式 震惊百里：</p>

    <p>出于震卦，震就是雷，辞曰：“震惊百里，不丧匕鬯（鬯：一种酒）”本来是说一个人虽然被吓了一跳但连酒也没撒掉，但光从名字来理解的话就是说雷电莫大的威力了。这一招生势浩大,震惊百里 </p>
  </li>
  <li>
    <p>第十四式 损则有孚：</p>

    <p>出自损卦，损就是不利的方面，和益卦相反。辞曰：“损，有孚”孚就是信用，辞曰：“自上至下谓之损”本句是说虽然守了信用但却没办成好事。此招出招和飞龙在天相似，自上而下，然损却接益，辞曰：“自下至上谓之益”，变招犹如异军突起，让人防不胜防。 </p>
  </li>
  <li>
    <p>第十五式 时乘六龙：</p>

    <p>出自乾卦，辞曰：“时乘六龙以御天”自古传说五岳为中华灵气之所在，每岳各有神龙镇守，加以姬黄帝（就是轩辕黄帝）之应龙，是为六龙。六龙齐出，王道浩然，其势之大，盖地铺天，为降龙十八掌最有王道正气的一招。 </p>
  </li>
  <li>
    <p>第十六式 龙战于野：</p>

    <p>取意于周易中的坤卦，坤者为地，辞曰：“龙战于野，其血玄黄”，野在这里作为平地讲，玄指黑色，其血玄黄是说血改变了应有的颜色。按古代的思想，龙上在于天，中潜于渊，下见于田。“龙战于野，其道穷也”指的就是龙处在了不该处于的位置，他的力量同时也被激发了出来，出这招一般在于危难之时的奋力一博，正因为没有退路，所以此招才无所不辟！ </p>
  </li>
  <li>
    <p>第十七式 履霜冰至：</p>

    <p>出自坤卦，辞曰：“履霜，坚冰至”踩到了霜，就应该想到大冰雪要来了。这招招如其名，初时似柔弱无力，但如敌人胆敢进招，就如暴雪突降，后劲无穷。</p>
  </li>
  <li>
    <p>第十八式 亢龙有悔：</p>

    <p>降龙十八掌中最常使用的一招，取意于周易中的乾卦，乾代表天，辞曰：“亢龙，有悔”是说亢龙（飞向尽头的龙）虽然当世无敌，但力终有尽时，力尽则悔，悔不可及。亢龙有悔，盈不可久，此招重悔不重亢，后尽无穷。</p>
  </li>
</ul>

]]></content>
  </entry>
  
</feed>
